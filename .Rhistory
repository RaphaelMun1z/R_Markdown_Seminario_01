str(dados)
summary(dados)
as_tibble(dados)
paged_table(dados)
glimpse(dados)
summary(dados)
kable(head(dados, 10))
output: html_document
knitr::opts_chunk$set(echo = TRUE)
# Carregar pacotes necessários
library(dplyr)
library(readr)
library(ggplot2)
library(stringr)
# Leitura do arquivo CSV
dados <- read_csv("C:/Users/rapha/Desktop/Estatística/software_engineer_salaries.csv")
knitr::opts_chunk$set(echo = TRUE)
# Carregar pacotes necessários
library(dplyr)
library(readr)
library(ggplot2)
library(stringr)
# Leitura do arquivo CSV
dados <- read_csv("C:/Users/rapha/Desktop/Estatística/SoftwareEngineerSalaries.csv")
# Verificar estrutura
glimpse(dados)
# Remover linhas com salários ausentes
dados <- dados %>% filter(!is.na(Salary))
# Separar faixa salarial em mínimo e máximo (em mil dólares)
dados <- dados %>%
mutate(
salario_limpo = str_extract(Salary, "\\$\\d+K\\s-\\s\\$\\d+K"),
salario_min = as.numeric(str_extract(salario_limpo, "\\d+")) * 1000,
salario_max = as.numeric(str_extract(salario_limpo, "(?<=-\\s\\$)\\d+")) * 1000,
salario_medio = (salario_min + salario_max) / 2
)
dados %>%
group_by(`Job Title`) %>%
summarise(Media_Salarial = mean(salario_medio, na.rm = TRUE)) %>%
arrange(desc(Media_Salarial)) %>%
head(10) %>%
ggplot(aes(x = reorder(`Job Title`, Media_Salarial), y = Media_Salarial)) +
geom_col(fill = "steelblue") +
coord_flip() +
labs(title = "Top 10 Cargos com Maior Salário Médio", x = "", y = "Salário Médio (USD)")
ggplot(dados, aes(x = `Company Score`, y = salario_medio)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(title = "Salário Médio vs Avaliação da Empresa",
x = "Avaliação da Empresa",
y = "Salário Médio (USD)")
```{r}
```{r}
```{r}
# Análise de salários por localização
dados %>%
group_by('Location') %>%
summarise(Media_Salarial = mean(salario_medio, na.rm = TRUE)) %>%
arrange(desc(Media_Salarial)) %>%
head(10) %>%
ggplot(aes(x = reorder('Location', Media_Salarial), y = Media_Salarial)) +
geom_col(fill = "lightgreen") +
coord_flip() +
labs(title = "Top 10 Localizações com Maior Salário Médio", x = "", y = "Salário Médio (USD)")
# Análise de salários por localização
dados %>%
group_by('Location') %>%
summarise(Media_Salarial = mean(salario_medio, na.rm = TRUE)) %>%
arrange(desc(Media_Salarial)) %>%
head(10) %>%
ggplot(aes(x = reorder('Location', Media_Salarial), y = Media_Salarial)) +
geom_col(fill = "lightgreen") +
coord_flip() +
labs(title = "Top 10 Localizações com Maior Salário Médio", x = "", y = "Salário Médio (USD)")
# Análise de salários por localização
dados %>%
group_by('Location') %>%
summarise(Media_Salarial = mean(salario_medio, na.rm = TRUE)) %>%
arrange(desc(Media_Salarial)) %>%
head(10) %>%
ggplot(aes(x = reorder('Location', Media_Salarial), y = Media_Salarial)) +
geom_col(fill = "lightgreen") +
coord_flip() +
labs(title = "Top 10 Localizações com Maior Salário Médio", x = "", y = "Salário Médio (USD)")
# Análise de salários por localização
dados %>%
group_by('Location') %>%
summarise(Media_Salarial = mean(salario_medio, na.rm = TRUE)) %>%
arrange(desc(Media_Salarial)) %>%
head(10) %>%
ggplot(aes(x = reorder('Location', Media_Salarial), y = Media_Salarial)) +
geom_col(fill = "lightgreen") +
coord_flip() +
labs(title = "Top 10 Localizações com Maior Salário Médio", x = "", y = "Salário Médio (USD)")
# Análise de salários por localização
dados %>%
group_by('Location') %>%
summarise(Media_Salarial = mean(salario_medio, na.rm = TRUE)) %>%
arrange(desc(Media_Salarial)) %>%
head(10) %>%
ggplot(aes(x = reorder('Location', Media_Salarial), y = Media_Salarial)) +
geom_col(fill = "lightgreen") +
coord_flip() +
labs(title = "Top 10 Localizações com Maior Salário Médio", x = "", y = "Salário Médio (USD)")
# Análise de salários por localização
dados %>%
group_by('Location') %>%
summarise(Media_Salarial = mean(salario_medio, na.rm = TRUE)) %>%
arrange(desc(Media_Salarial)) %>%
head(10) %>%
ggplot(aes(x = reorder('Location', Media_Salarial), y = Media_Salarial)) +
geom_col(fill = "lightgreen") +
coord_flip() +
labs(title = "Top 10 Localizações com Maior Salário Médio", x = "", y = "Salário Médio (USD)")
# Análise de salários por localização
dados %>%
group_by('Location') %>%
summarise(Media_Salarial = mean(salario_medio, na.rm = TRUE)) %>%
arrange(desc(Media_Salarial)) %>%
head(10) %>%
ggplot(aes(x = reorder('Location', Media_Salarial), y = Media_Salarial)) +
geom_col(fill = "lightgreen") +
coord_flip() +
labs(title = "Top 10 Localizações com Maior Salário Médio", x = "", y = "Salário Médio (USD)")
# Análise de salários por localização
dados %>%
group_by('Location') %>%
summarise(Media_Salarial = mean(salario_medio, na.rm = TRUE)) %>%
arrange(desc(Media_Salarial)) %>%
head(10) %>%
ggplot(aes(x = reorder('Location', Media_Salarial), y = Media_Salarial)) +
geom_col(fill = "lightgreen") +
coord_flip() +
labs(title = "Top 10 Localizações com Maior Salário Médio", x = "", y = "Salário Médio (USD)")
# Análise de salários por localização
dados %>%
group_by('Location') %>%
summarise(Media_Salarial = mean(salario_medio, na.rm = TRUE)) %>%
arrange(desc(Media_Salarial)) %>%
head(10) %>%
ggplot(aes(x = reorder('Location', Media_Salarial), y = Media_Salarial)) +
geom_col(fill = "lightgreen") +
coord_flip() +
labs(title = "Top 10 Localizações com Maior Salário Médio", x = "", y = "Salário Médio (USD)")
```{r}
knitr::opts_chunk$set(echo = TRUE)
# Carregar pacotes necessários
library(dplyr)
library(readr)
library(ggplot2)
library(stringr)
# Leitura do arquivo CSV
dados <- read_csv("C:/Users/rapha/Desktop/Estatística/SoftwareEngineerSalaries.csv")
# Verificar estrutura
glimpse(dados)
# Remover linhas com salários ausentes
dados <- dados %>% filter(!is.na(Salary))
# Separar faixa salarial em mínimo e máximo (em mil dólares)
dados <- dados %>%
mutate(
salario_limpo = str_extract(Salary, "\\$\\d+K\\s-\\s\\$\\d+K"),
salario_min = as.numeric(str_extract(salario_limpo, "\\d+")) * 1000,
salario_max = as.numeric(str_extract(salario_limpo, "(?<=-\\s\\$)\\d+")) * 1000,
salario_medio = (salario_min + salario_max) / 2
)
dados %>%
group_by(`Job Title`) %>%
summarise(Media_Salarial = mean(salario_medio, na.rm = TRUE)) %>%
arrange(desc(Media_Salarial)) %>%
head(10) %>%
ggplot(aes(x = reorder(`Job Title`, Media_Salarial), y = Media_Salarial)) +
geom_col(fill = "steelblue") +
coord_flip() +
labs(title = "Top 10 Cargos com Maior Salário Médio", x = "", y = "Salário Médio (USD)")
ggplot(dados, aes(x = `Company Score`, y = salario_medio)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(title = "Salário Médio vs Avaliação da Empresa",
x = "Avaliação da Empresa",
y = "Salário Médio (USD)")
# Análise de salários por localização
dados %>%
group_by('Location') %>%
summarise(Media_Salarial = mean(salario_medio, na.rm = TRUE)) %>%
arrange(desc(Media_Salarial)) %>%
head(10) %>%
ggplot(aes(x = reorder('Location', Media_Salarial), y = Media_Salarial)) +
geom_col(fill = "lightgreen") +
coord_flip() +
labs(title = "Top 10 Localizações com Maior Salário Médio", x = "", y = "Salário Médio (USD)")
```{r}
knitr::opts_chunk$set(echo = TRUE)
# Carregar pacotes necessários
library(dplyr)
library(readr)
library(ggplot2)
library(stringr)
# Leitura do arquivo CSV
dados <- read_csv("C:/Users/rapha/Desktop/Estatística/SoftwareEngineerSalaries.csv")
# Verificar estrutura
glimpse(dados)
# Remover linhas com salários ausentes
dados <- dados %>% filter(!is.na(Salary))
# Separar faixa salarial em mínimo e máximo (em mil dólares)
dados <- dados %>%
mutate(
salario_limpo = str_extract(Salary, "\\$\\d+K\\s-\\s\\$\\d+K"),
salario_min = as.numeric(str_extract(salario_limpo, "\\d+")) * 1000,
salario_max = as.numeric(str_extract(salario_limpo, "(?<=-\\s\\$)\\d+")) * 1000,
salario_medio = (salario_min + salario_max) / 2
)
dados %>%
group_by(`Job Title`) %>%
summarise(Media_Salarial = mean(salario_medio, na.rm = TRUE)) %>%
arrange(desc(Media_Salarial)) %>%
head(10) %>%
ggplot(aes(x = reorder(`Job Title`, Media_Salarial), y = Media_Salarial)) +
geom_col(fill = "steelblue") +
coord_flip() +
labs(title = "Top 10 Cargos com Maior Salário Médio", x = "", y = "Salário Médio (USD)")
ggplot(dados, aes(x = `Company Score`, y = salario_medio)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(title = "Salário Médio vs Avaliação da Empresa",
x = "Avaliação da Empresa",
y = "Salário Médio (USD)")
# Análise de salários por localização
dados %>%
group_by(`Location`) %>%
summarise(Media_Salarial = mean(salario_medio, na.rm = TRUE)) %>%
arrange(desc(Media_Salarial)) %>%
head(10) %>%
ggplot(aes(x = reorder(`Location`, Media_Salarial), y = Media_Salarial)) +
geom_col(fill = "lightgreen") +
coord_flip() +
labs(title = "Top 10 Localizações com Maior Salário Médio", x = "", y = "Salário Médio (USD)")
```{r}
knitr::opts_chunk$set(echo = TRUE)
# Carregar pacotes necessários
library(dplyr)
library(readr)
library(ggplot2)
library(stringr)
# Leitura do arquivo CSV
dados <- read_csv("C:/Users/rapha/Desktop/Estatística/SoftwareEngineerSalaries.csv")
# Verificar estrutura
glimpse(dados)
# Remover linhas com salários ausentes
dados <- dados %>% filter(!is.na(Salary))
# Separar faixa salarial em mínimo e máximo (em mil dólares)
dados <- dados %>%
mutate(
salario_limpo = str_extract(Salary, "\\$\\d+K\\s-\\s\\$\\d+K"),
salario_min = as.numeric(str_extract(salario_limpo, "\\d+")) * 1000,
salario_max = as.numeric(str_extract(salario_limpo, "(?<=-\\s\\$)\\d+")) * 1000,
salario_medio = (salario_min + salario_max) / 2
)
dados %>%
group_by(`Job Title`) %>%
summarise(Media_Salarial = mean(salario_medio, na.rm = TRUE)) %>%
arrange(desc(Media_Salarial)) %>%
head(10) %>%
ggplot(aes(x = reorder(`Job Title`, Media_Salarial), y = Media_Salarial)) +
geom_col(fill = "steelblue") +
coord_flip() +
labs(title = "Top 10 Cargos com Maior Salário Médio", x = "", y = "Salário Médio (USD)")
ggplot(dados, aes(x = `Company Score`, y = salario_medio)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(title = "Salário Médio vs Avaliação da Empresa",
x = "Avaliação da Empresa",
y = "Salário Médio (USD)")
# Análise de salários por localização
dados %>%
group_by(`Location`) %>%
summarise(Media_Salarial = mean(salario_medio, na.rm = TRUE)) %>%
arrange(desc(Media_Salarial)) %>%
head(10) %>%
ggplot(aes(x = reorder(`Location`, Media_Salarial), y = Media_Salarial)) +
geom_col(fill = "lightgreen") +
coord_flip() +
labs(title = "Top 10 Localizações com Maior Salário Médio", x = "", y = "Salário Médio (USD)")
# Análise de Pontuação de Empresas
dados %>%
group_by(`Company Score`) %>%
summarise(Media_Salarial = mean(salario_medio, na.rm = TRUE)) %>%
ggplot(aes(x = `Company Score`, y = Media_Salarial)) +
geom_line(color = "purple") +
geom_point() +
labs(title = "Salário Médio por Pontuação da Empresa",
x = "Pontuação da Empresa",
y = "Salário Médio (USD)")
knitr::opts_chunk$set(echo = TRUE)
# Carregar pacotes necessários
library(dplyr)
library(readr)
library(ggplot2)
library(stringr)
# Leitura do arquivo CSV
dados <- read_csv("C:/Users/rapha/Desktop/Estatística/SoftwareEngineerSalaries.csv")
# Verificar estrutura
glimpse(dados)
# Remover linhas com salários ausentes
dados <- dados %>% filter(!is.na(Salary))
# Separar faixa salarial em mínimo e máximo (em mil dólares)
dados <- dados %>%
mutate(
salario_limpo = str_extract(Salary, "\\$\\d+K\\s-\\s\\$\\d+K"),
salario_min = as.numeric(str_extract(salario_limpo, "\\d+")) * 1000,
salario_max = as.numeric(str_extract(salario_limpo, "(?<=-\\s\\$)\\d+")) * 1000,
salario_medio = (salario_min + salario_max) / 2
)
dados %>%
group_by(`Job Title`) %>%
summarise(Media_Salarial = mean(salario_medio, na.rm = TRUE)) %>%
arrange(desc(Media_Salarial)) %>%
head(10) %>%
ggplot(aes(x = reorder(`Job Title`, Media_Salarial), y = Media_Salarial)) +
geom_col(fill = "steelblue") +
coord_flip() +
labs(title = "Top 10 Cargos com Maior Salário Médio", x = "", y = "Salário Médio (USD)")
ggplot(dados, aes(x = `Company Score`, y = salario_medio)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(title = "Salário Médio vs Avaliação da Empresa",
x = "Avaliação da Empresa",
y = "Salário Médio (USD)")
# Análise de salários por localização
dados %>%
group_by(`Location`) %>%
summarise(Media_Salarial = mean(salario_medio, na.rm = TRUE)) %>%
arrange(desc(Media_Salarial)) %>%
head(10) %>%
ggplot(aes(x = reorder(`Location`, Media_Salarial), y = Media_Salarial)) +
geom_col(fill = "lightgreen") +
coord_flip() +
labs(title = "Top 10 Localizações com Maior Salário Médio", x = "", y = "Salário Médio (USD)")
# Análise de Pontuação de Empresas
dados %>%
group_by(`Company Score`) %>%
summarise(Media_Salarial = mean(salario_medio, na.rm = TRUE)) %>%
ggplot(aes(x = `Company Score`, y = Media_Salarial)) +
geom_line(color = "purple") +
geom_point() +
labs(title = "Salário Médio por Pontuação da Empresa",
x = "Pontuação da Empresa",
y = "Salário Médio (USD)")
# Relação Localização e Salário
dados %>%
group_by(`Location`) %>%
summarise(Media_Salarial = mean(salario_medio, na.rm = TRUE)) %>%
ggplot(aes(x = reorder(`Location`, Media_Salarial), y = Media_Salarial)) +
geom_col(fill = "orange") +
coord_flip() +
labs(title = "Salário Médio por Localização", x = "", y = "Salário Médio (USD)")
knitr::opts_chunk$set(echo = TRUE)
# Carregar pacotes necessários
library(dplyr)
library(readr)
library(ggplot2)
library(stringr)
# Leitura do arquivo CSV
dados <- read_csv("C:/Users/rapha/Desktop/Estatística/SoftwareEngineerSalaries.csv")
# Verificar estrutura
glimpse(dados)
# Remover linhas com salários ausentes
dados <- dados %>% filter(!is.na(Salary))
# Separar faixa salarial em mínimo e máximo (em mil dólares)
dados <- dados %>%
mutate(
salario_limpo = str_extract(Salary, "\\$\\d+K\\s-\\s\\$\\d+K"),
salario_min = as.numeric(str_extract(salario_limpo, "\\d+")) * 1000,
salario_max = as.numeric(str_extract(salario_limpo, "(?<=-\\s\\$)\\d+")) * 1000,
salario_medio = (salario_min + salario_max) / 2
)
dados %>%
group_by(`Job Title`) %>%
summarise(Media_Salarial = mean(salario_medio, na.rm = TRUE)) %>%
arrange(desc(Media_Salarial)) %>%
head(10) %>%
ggplot(aes(x = reorder(`Job Title`, Media_Salarial), y = Media_Salarial)) +
geom_col(fill = "steelblue") +
coord_flip() +
labs(title = "Top 10 Cargos com Maior Salário Médio", x = "", y = "Salário Médio (USD)")
ggplot(dados, aes(x = `Company Score`, y = salario_medio)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(title = "Salário Médio vs Avaliação da Empresa",
x = "Avaliação da Empresa",
y = "Salário Médio (USD)")
# Análise de salários por localização
dados %>%
group_by(`Location`) %>%
summarise(Media_Salarial = mean(salario_medio, na.rm = TRUE)) %>%
arrange(desc(Media_Salarial)) %>%
head(10) %>%
ggplot(aes(x = reorder(`Location`, Media_Salarial), y = Media_Salarial)) +
geom_col(fill = "lightgreen") +
coord_flip() +
labs(title = "Top 10 Localizações com Maior Salário Médio", x = "", y = "Salário Médio (USD)")
# Análise de Pontuação de Empresas
dados %>%
group_by(`Company Score`) %>%
summarise(Media_Salarial = mean(salario_medio, na.rm = TRUE)) %>%
ggplot(aes(x = `Company Score`, y = Media_Salarial)) +
geom_line(color = "purple") +
geom_point() +
labs(title = "Salário Médio por Pontuação da Empresa",
x = "Pontuação da Empresa",
y = "Salário Médio (USD)")
# Relação Localização e Top Salário
dados %>%
group_by(`Location`) %>%
summarise(Max_Salario = max(salario_medio, na.rm = TRUE)) %>%
arrange(desc(Max_Salario)) %>%
head(10) %>%
ggplot(aes(x = reorder(`Location`, Max_Salario), y = Max_Salario)) +
geom_col(fill = "orange") +
coord_flip() +
labs(title = "Top 10 Localizações com Maior Salário Máximo", x = "", y = "Salário Máximo (USD)")
```{r}
```{r}
# Ver o resultado
head(dados_selecionados)
```{r, echo=FALSE}
```{r}
```{r}
```{r, echo=FALSE, results='hide'}
```{r, echo=FALSE, results='hide'}
```{r, message=FALSE, echo=FALSE, results='hide'}
```{r, message=FALSE}
```{r, echo=FALSE, results='hide'}
```{r}
```{r, echo=FALSE, results='hide'}
```{r, echo=FALSE, results='hide'}
```{r, echo=FALSE, results='hide'}
```{r setup, include=FALSE, echo=FALSE, results='hide'}
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(readr)
library(ggplot2)
library(stringr)
setwd("C:/Users/rapha/Desktop/estatistica/dataset")
dados <- read.csv("dataset.csv", dec=".", sep=",", header=T)
glimpse(dados)
dados_selecionados <- dados[ , c("Rooms", "Price", "Postcode", "Bathroom", "Car", "Landsize", "BuildingArea", "Lattitude", "SellerG", "Method", "Type")]
head(dados_selecionados)
```{r}
```{r}
methods <- dados_selecionados[, "Method"]
head(methods)
ggplot(data = dados_selecionados, aes(x = Method)) +
geom_bar(fill = "#2b6cb0", alpha = 0.8) +
geom_text(stat = 'count', aes(label = ..count..), vjust = -0.5, color = "black") +
labs(
title = "Quantidade de Imóveis por Método de Venda",
x = "Método de Venda",
y = "Quantidade (Frequência Absoluta)"
) +
theme_minimal()
ggplot(data = dados_selecionados, aes(x = Method)) +
geom_bar(fill = "#2b6cb0", alpha = 0.8) +
geom_text(stat = 'count', aes(label = after_stat(count)), vjust = -0.5, color = "black") +
labs(
title = "Quantidade de Imóveis por Método de Venda",
x = "Método de Venda",
y = "Quantidade (Frequência Absoluta)"
) +
theme_minimal()
ggplot(data = dados_selecionados, aes(x = Method)) +
geom_bar(fill = "#2b6cb0", alpha = 0.8) +
# Ajustamos o texto para alinhar corretamente no gráfico virado
geom_text(
stat = 'count',
aes(label = after_stat(count)),
hjust = -0.2 # Usamos 'hjust' (ajuste horizontal) em vez de 'vjust'
) +
labs(
title = "Quantidade de Imóveis por Método de Venda",
x = "Método de Venda",
y = "Quantidade (Frequência Absoluta)"
) +
theme_minimal() +
coord_flip() # <--- ESSA É A MÁGICA! Vira o gráfico.
ggplot(data = dados_selecionados, aes(x = head(SellerG))) +
geom_bar(fill = "#2b6cb0", alpha = 0.8) +
geom_text(stat = 'count', aes(label = after_stat(count)), hjust = -0.2) +
labs(title = "Quantidade de Imóveis por Vendedor", x = "Vendedor", y = "Quantidade (Frequência Absoluta)") +
theme_minimal()
ggplot(data = top_5_vendedores, aes(x = reorder(SellerG, n), y = n)) +
geom_col(fill = "#2b6cb0", alpha = 0.8) +
geom_text(aes(label = n), hjust = -0.2) +
coord_flip() + # Virar para gráfico de barras horizontais
labs(title = "Top 5 Vendedores por Quantidade de Imóveis", x = "Vendedor", y = "Quantidade de Imóveis") +
theme_minimal()
top_5_vendedores <- dados_selecionados %>%
count(SellerG, sort = TRUE) %>%
top_n(5)
ggplot(data = top_5_vendedores, aes(x = reorder(SellerG, n), y = n)) +
geom_col(fill = "#2b6cb0", alpha = 0.8) +
geom_text(aes(label = n), hjust = -0.2) +
coord_flip() + # Virar para gráfico de barras horizontais
labs(title = "Top 5 Vendedores por Quantidade de Imóveis", x = "Vendedor", y = "Quantidade de Imóveis") +
theme_minimal()
top_5_vendedores <- dados_selecionados %>%
count(SellerG, sort = TRUE) %>%
top_n(5)
ggplot(data = top_5_vendedores, aes(x = reorder(SellerG, n), y = n)) +
geom_col(fill = "#2b6cb0", alpha = 0.8) +
geom_text(aes(label = n), hjust = -0.2) +
labs(title = "Top 5 Vendedores por Quantidade de Imóveis", x = "Vendedor", y = "Quantidade de Imóveis") +
theme_minimal()
